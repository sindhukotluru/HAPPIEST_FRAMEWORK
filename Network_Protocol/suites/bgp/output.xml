<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1 (Python 3.5.2 on linux)" rpa="false" generated="20181213 14:50:08.726">
<suite source="/root/L3VPN/HAPPIEST_FRAMEWORK/Network_Protocol/suites/bgp/BGP_L3VPN.robot" name="BGP L3VPN" id="s1">
<test name="Configure MP-BGP on PE routers" id="s1-t1">
<kw name="Enable MP-BGP on PE routers" library="Resource">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Configure MPLS on PE router R2 and R3</arg>
</arguments>
<status status="PASS" endtime="20181213 14:50:09.340" starttime="20181213 14:50:09.339"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>R2</arg>
<arg>${MPLS_R2_Interface}</arg>
<arg>${MPLS_LABEL_PROTO}</arg>
<arg>enable</arg>
</arguments>
<assign>
<var>${mpls_R2}</var>
</assign>
<msg level="INFO" timestamp="20181213 14:50:09.341">${mpls_R2} = ['R2', ['Link_R2_MPLS'], 'ldp', 'enable']</msg>
<status status="PASS" endtime="20181213 14:50:09.341" starttime="20181213 14:50:09.340"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>R3</arg>
<arg>${MPLS_R3_Interface}</arg>
<arg>${MPLS_LABEL_PROTO}</arg>
<arg>enable</arg>
</arguments>
<assign>
<var>${mpls_R3}</var>
</assign>
<msg level="INFO" timestamp="20181213 14:50:09.342">${mpls_R3} = ['R3', ['Link_R3_MPLS'], 'ldp', 'enable']</msg>
<status status="PASS" endtime="20181213 14:50:09.342" starttime="20181213 14:50:09.342"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${mpls_R3}</arg>
<arg>${mpls_R2}</arg>
</arguments>
<assign>
<var>${load_mpls}</var>
</assign>
<msg level="INFO" timestamp="20181213 14:50:09.344">${load_mpls} = [['R3', ['Link_R3_MPLS'], 'ldp', 'enable'], ['R2', ['Link_R2_MPLS'], 'ldp', 'enable']]</msg>
<status status="PASS" endtime="20181213 14:50:09.344" starttime="20181213 14:50:09.343"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>start_mpls_bgp</arg>
<arg>${load_mpls}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Start Mpls Bgp" library="config_ip">
<arguments>
<arg>${load_mpls}</arg>
</arguments>
<msg level="INFO" timestamp="20181213 14:50:27.277">Waiting thread #ConfigureRouter_R3

R3#
R3#                                          configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
R3(config)#
R3(config)#                                          ip cef
R3(config)#
R3(config)#                                          mpls label protocol ldp
R3(config)#
R3(config)#                                          mpls ldp router-id Loopb$                               mpls ldp router-id Loopba         ck0 force
R3(config)#
R3(config)#                                          interface Ethernet 1/1
R3(config-if)#
R3(config-if)#                                          mpls ip
R3(config-if)#
R3(config-if)#                                          mpls label protocol l$                               mpls label protocol ld         p
R3(config-if)#
R3(config-if)#                                          

R2#
R2#                                          configure terminal
Enter configuration commands, one per line.  End with CNTL/Z.
R2(config)#
R2(config)#                                          ip cef
R2(config)#
R2(config)#                                          mpls label protocol ldp
R2(config)#
R2(config)#                                          mpls ldp router-id Loopb$                               mpls ldp router-id Loopba         ck0 force
R2(config)#
R2(config)#                                          interface Ethernet 1/0
R2(config-if)#
R2(config-if)#                                          mpls ip
R2(config-if)#
R2(config-if)#                                          mpls label protocol l$                               mpls label protocol ld         p
R2(config-if)#
R2(config-if)#                                          
Waiting thread #ConfigureRouter_R2</msg>
<status status="PASS" endtime="20181213 14:50:27.278" starttime="20181213 14:50:09.345"></status>
</kw>
<msg level="INFO" timestamp="20181213 14:50:27.278">${result} = True</msg>
<status status="PASS" endtime="20181213 14:50:27.278" starttime="20181213 14:50:09.344"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${result}==False</arg>
<arg>FAIL</arg>
<arg>Unable to configure MP-BGP on PE routers</arg>
</arguments>
<status status="PASS" endtime="20181213 14:50:27.279" starttime="20181213 14:50:27.279"></status>
</kw>
<status status="PASS" endtime="20181213 14:50:27.280" starttime="20181213 14:50:09.339"></status>
</kw>
<status status="PASS" critical="yes" endtime="20181213 14:50:27.281" starttime="20181213 14:50:09.337"></status>
</test>
<doc>A test suite with tests for configuring BGP.
Topology:-
____________________________
| R1 AS2 |
| /  |
| /  |
| R2------ R3 |
|_________|________|_________|
| |
______|__ ___|______
| AS1| | AS3|
| R4 | | R5 |
|_________| |__________|</doc>
<metadata>
<item name="Version">1.0
More Info For more information about Robot Framework see http://robotframework.org
Author Payal Jain
Date 19 Dec 2016
Executed At ${HOST}
Test Framework Robot Framework Python</item>
</metadata>
<status status="PASS" endtime="20181213 14:50:27.289" starttime="20181213 14:50:08.729"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" name="BGP L3VPN" id="s1" fail="0">BGP L3VPN</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
